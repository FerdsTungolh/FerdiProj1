<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>24, 12</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        H9Pis/8C0dPO2KEYLnoAAAAASUVORK5CYII=
</value>
  </data>
</root>